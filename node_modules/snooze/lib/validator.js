var _ = require('lodash');
var q = require('q');
var snooze = require('snooze');

var _new = function(nm, module) {
	var _name = null;
	var _services = [];
	var _dtos = [];

	if(nm === null || nm === undefined || nm.length < 1) {
		module.fatal('Validator Name Isn\'t Defined');
	} else {
		_name = nm;
	}

	var validate = function(req) {
		var deferred = q.defer();
		var check = this['test'](deferred, req);

		var response = {
			'promise': deferred.promise,
			'valid': null,
			'message': null
		};

		response.promise.then(function(msg) {
			response.valid = true;
			response.message = msg;

			deferred.resolve();
		}).fail(function(msg) {
			response.valid = false;
			response.message = msg;

			deferred.reject();
		});

		return response;
	};

	var setTest = function(func) {
		this['test'] = func;
	};

	var getTest = function() {
		return this['test'];
	};

	var getName = function() {
		return _name;
	};

	var __addSrv = function(srv) {
		_services.push(srv);
	};

	var __addDTO = function(dto) {
		_dtos.push(dto);
	};

	var __getServices = function() {
		return _services;
	};

	var __getDTOs = function() {
		return _dtos;
	};

	return {
		'getName': getName,
		'setTest': setTest,
		'validate': validate,
		'getTest': getTest,
		'__getServices': __getServices,
		'__getDTOs': __getDTOs,
		'__addSrv': __addSrv,
		'__addDTO': __addDTO
	};
};

module.exports = _new;